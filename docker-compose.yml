version: '3.9'

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             celery -A app worker --loglevel=info --detach &&
             python data/redis-py.py &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changename
      - REDIS_HOST=redis
      - REDIS_PASSWORD=changepass
    depends_on:
      - db
      - redis


  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgres/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changename

  redis:
    image: redis:7.0-alpine
    restart: always
    command: redis-server
    volumes:
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - '4000:3000'  # Change the port mapping
    volumes:
      - ./front/src:/app/src  # Update the volume mapping
    depends_on:
      - app

  managefront:
    build:
      context: ./managefront
      dockerfile: Dockerfile
    ports:
      - '5000:3000'  # Change the port mapping
    volumes:
      - ./managefront/src:/app/src  # Update the volume mapping
    depends_on:
      - app


volumes:
  dev-db-data:
  redis:
  redis-config: